//@version=5
indicator(title='ScannerData', shorttitle='_SD_')

// study(title="Average True Range", shorttitle="ATR", overlay=false)
plot(ta.rma(ta.tr(true), 14), title='ATR')

// study("Average Directional Index", shorttitle="ADX")
dirmov(len) =>
	up = ta.change(high)
	down = -ta.change(low)
	truerange = ta.rma(ta.tr, len)
	plus = fixnan(100 * ta.rma(up > down and up > 0 ? up : 0, len) / truerange)
	minus = fixnan(100 * ta.rma(down > up and down > 0 ? down : 0, len) / truerange)
	[plus, minus]
adx(dilen, adxlen) =>
	[plus, minus] = dirmov(dilen)
	sum = plus + minus
	adx = 100 * ta.rma(math.abs(plus - minus) / (sum == 0 ? 1 : sum), adxlen)
	[adx, plus, minus]
[adxValue, adxPlus, adxMinus] = adx(14, 14)
plot(adxValue, title='ADX')
plot(adxPlus, title='ADX+DI')
plot(adxMinus, title='ADX-DI')
plot(adxPlus[1], title='ADX+DI[1]')
plot(adxMinus[1], title='ADX-DI[1]')
[adxValue9, adxPlus9, adxMinus9] = adx(9, 9)
plot(adxValue9, title='ADX_9')
plot(adxPlus9, title='ADX+DI_9')
plot(adxMinus9, title='ADX-DI_9')
plot(adxPlus9[1], title='ADX+DI_9[1]')
plot(adxMinus9[1], title='ADX-DI_9[1]')
[adxValue20, adxPlus20, adxMinus20] = adx(20, 20)
plot(adxValue20, title='ADX_20')
plot(adxPlus20, title='ADX+DI_20')
plot(adxMinus20, title='ADX-DI_20')
plot(adxPlus20[1], title='ADX+DI_20[1]')
plot(adxMinus20[1], title='ADX-DI_20[1]')
[adxValue50, adxPlus50, adxMinus50] = adx(50, 50)
plot(adxValue50, title='ADX_50')
plot(adxPlus50, title='ADX+DI_50')
plot(adxMinus50, title='ADX-DI_50')
plot(adxPlus50[1], title='ADX+DI_50[1]')
plot(adxMinus50[1], title='ADX-DI_50[1]')
[adxValue100, adxPlus100, adxMinus100] = adx(100, 100)
plot(adxValue100, title='ADX_100')
plot(adxPlus100, title='ADX+DI_100')
plot(adxMinus100, title='ADX-DI_100')
plot(adxPlus100[1], title='ADX+DI_100[1]')
plot(adxMinus100[1], title='ADX-DI_100[1]')

// study(shorttitle="BB", title="Bollinger Bands", overlay=true)
lengthBB20 = 20
lengthBB50 = 50
srcBB = close
multBB = 2
basisBB20 = ta.sma(srcBB, lengthBB20)
devBB20 = multBB * ta.stdev(srcBB, lengthBB20)
upperBB20 = basisBB20 + devBB20
lowerBB20 = basisBB20 - devBB20
plot(basisBB20, title='BB.basis')
plot(upperBB20, title='BB.upper')
plot(lowerBB20, title='BB.lower')
basisBB50 = ta.sma(srcBB, lengthBB50)
devBB50 = multBB * ta.stdev(srcBB, lengthBB50)
upperBB50 = basisBB50 + devBB50
lowerBB50 = basisBB50 - devBB50
plot(basisBB50, title='BB.basis_50')
plot(upperBB50, title='BB.upper_50')
plot(lowerBB50, title='BB.lower_50')

// study(title="Moving Average Convergence/Divergence", shorttitle="MACD")
sourceMACD = close
fastLengthMACD = 12
slowLengthMACD = 26
signalLengthMACD = 9
fastMAMACD = ta.ema(sourceMACD, fastLengthMACD)
slowMAMACD = ta.ema(sourceMACD, slowLengthMACD)
macdMACD = fastMAMACD - slowMAMACD
signalMACD = ta.ema(macdMACD, signalLengthMACD)
histMACD = macdMACD - signalMACD
plot(histMACD, title='MACD.hist')
plot(macdMACD, title='MACD.macd')
plot(signalMACD, title='MACD.signal')

//study(title="Momentum", shorttitle="Mom")
Mom = close - close[10]
plot(Mom, title='Mom')
plot(Mom[1], title='Mom[1]')
Mom14 = close - close[14]
plot(Mom14, title='Mom_14')
plot(Mom14[1], title='Mom_14[1]')

//study(title="Relative Strength Index", shorttitle="RSI")
RSI = ta.rsi(close, 14)
plot(RSI, title='RSI')
plot(RSI[1], title='RSI[1]')
plot(ta.rsi(close, 2), title='RSI2')
plot(ta.rsi(close, 2)[1], title='RSI2[1]')
plot(ta.rsi(close, 3), title='RSI3')
plot(ta.rsi(close, 3)[1], title='RSI3[1]')
plot(ta.rsi(close, 5), title='RSI5')
plot(ta.rsi(close, 5)[1], title='RSI5[1]')
plot(ta.rsi(close, 7), title='RSI7')
plot(ta.rsi(close, 7)[1], title='RSI7[1]')
plot(ta.rsi(close, 9), title='RSI9')
plot(ta.rsi(close, 9)[1], title='RSI9[1]')
plot(ta.rsi(close, 21), title='RSI21')
plot(ta.rsi(close, 21)[1], title='RSI21[1]')

// study(title="Moving Average", shorttitle="MA", overlay=true)
SMA3 = ta.sma(close, 3)
plot(SMA3, title='SMA3')
SMA5 = ta.sma(close, 5)
plot(SMA5, title='SMA5')
SMA6 = ta.sma(close, 6)
plot(SMA6, title='SMA6')
SMA7 = ta.sma(close, 7)
plot(SMA7, title='SMA7')
SMA8 = ta.sma(close, 8)
plot(SMA8, title='SMA8')
SMA9 = ta.sma(close, 9)
plot(SMA9, title='SMA9')
SMA10 = ta.sma(close, 10)
plot(SMA10, title='SMA10')
SMA12 = ta.sma(close, 12)
plot(SMA12, title='SMA12')
SMA13 = ta.sma(close, 13)
plot(SMA13, title='SMA13')
SMA20 = ta.sma(close, 20)
plot(SMA20, title='SMA20')
SMA21 = ta.sma(close, 21)
plot(SMA21, title='SMA21')
SMA25 = ta.sma(close, 25)
plot(SMA25, title='SMA25')
SMA30 = ta.sma(close, 30)
plot(SMA30, title='SMA30')
SMA40 = ta.sma(close, 40)
plot(SMA40, title='SMA40')
SMA50 = ta.sma(close, 50)
plot(SMA50, title='SMA50')
SMA75 = ta.sma(close, 75)
plot(SMA75, title='SMA75')
SMA100 = ta.sma(close, 100)
plot(SMA100, title='SMA100')
SMA120 = ta.sma(close, 120)
plot(SMA120, title='SMA120')
SMA150 = ta.sma(close, 150)
plot(SMA150, title='SMA150')
SMA200 = ta.sma(close, 200)
plot(SMA200, title='SMA200')
SMA250 = ta.sma(close, 250)
plot(SMA250, title='SMA250')
SMA300 = ta.sma(close, 300)
plot(SMA300, title='SMA300')

// study(title="Exponential Moving Average", shorttitle="EMA", overlay=true)
EMA3 = ta.ema(close, 3)
plot(EMA3, title='EMA3')
EMA5 = ta.ema(close, 5)
plot(EMA5, title='EMA5')
EMA6 = ta.ema(close, 6)
plot(EMA6, title='EMA6')
EMA7 = ta.ema(close, 7)
plot(EMA7, title='EMA7')
EMA8 = ta.ema(close, 8)
plot(EMA8, title='EMA8')
EMA9 = ta.ema(close, 9)
plot(EMA9, title='EMA9')
EMA10 = ta.ema(close, 10)
plot(EMA10, title='EMA10')
EMA12 = ta.ema(close, 12)
plot(EMA12, title='EMA12')
EMA13 = ta.ema(close, 13)
plot(EMA13, title='EMA13')
EMA20 = ta.ema(close, 20)
plot(EMA20, title='EMA20')
EMA21 = ta.ema(close, 21)
plot(EMA21, title='EMA21')
EMA25 = ta.ema(close, 25)
plot(EMA25, title='EMA25')
EMA30 = ta.ema(close, 30)
plot(EMA30, title='EMA30')
EMA40 = ta.ema(close, 40)
plot(EMA40, title='EMA40')
EMA50 = ta.ema(close, 50)
plot(EMA50, title='EMA50')
EMA75 = ta.ema(close, 75)
plot(EMA75, title='EMA75')
EMA100 = ta.ema(close, 100)
plot(EMA100, title='EMA100')
EMA120 = ta.ema(close, 120)
plot(EMA120, title='EMA120')
EMA150 = ta.ema(close, 150)
plot(EMA150, title='EMA150')
EMA200 = ta.ema(close, 200)
plot(EMA200, title='EMA200')
EMA250 = ta.ema(close, 250)
plot(EMA250, title='EMA250')
EMA300 = ta.ema(close, 300)
plot(EMA300, title='EMA300')

// study(title="Stochastic", shorttitle="Stoch")
lengthStoch = 14
smoothKStoch = 3
smoothDStoch = 3
kStoch = ta.sma(ta.stoch(close, high, low, lengthStoch), smoothKStoch)
dStoch = ta.sma(kStoch, smoothDStoch)
plot(kStoch, title='Stoch.K')
plot(dStoch, title='Stoch.D')
plot(kStoch[1], title='Stoch.K[1]')
plot(dStoch[1], title='Stoch.D[1]')
lengthStoch := 14
smoothKStoch := 1
smoothDStoch := 3
kStoch_14_1_3 = ta.sma(ta.stoch(close, high, low, lengthStoch), smoothKStoch)
dStoch_14_1_3 = ta.sma(kStoch_14_1_3, smoothDStoch)
plot(kStoch_14_1_3, title='Stoch.K_14_1_3')
plot(dStoch_14_1_3, title='Stoch.D_14_1_3')
plot(kStoch_14_1_3[1], title='Stoch.K[1]_14_1_3')
plot(dStoch_14_1_3[1], title='Stoch.D[1]_14_1_3')

// average volume
AvgVol = ta.sma(volume, 10)
plot(AvgVol, title='average_volume_10d_calc')
plot(volume / ta.sma(volume[1], 10), title='relative_volume_10d_calc')
plot(ta.sma(volume, 30), title='average_volume_30d_calc')
plot(ta.sma(volume, 60), title='average_volume_60d_calc')
plot(ta.sma(volume, 90), title='average_volume_90d_calc')

// Commodity Channel Index
CCI = ta.cci(hlc3, 20)
plot(CCI, title='CCI20')
plot(CCI[1], title='CCI20[1]')

// Donchian Channels
donchLen = 20
donchUpper = ta.highest(donchLen)
donchLower = ta.lowest(donchLen)
plot(donchLower, title='DonchCh20.Lower')
plot(donchUpper, title='DonchCh20.Upper')
plot(math.avg(donchUpper, donchLower), title='DonchCh20.Middle')

// Hull Moving Average
hullMALength = 9
hullMA_n2ma = 2 * ta.wma(close, hullMALength / 2)
hullMA_nma = ta.wma(close, hullMALength)
HullMA9 = ta.wma(hullMA_n2ma - hullMA_nma, math.floor(math.sqrt(hullMALength)))
plot(HullMA9, title='HullMA9')

// Awesome Oscillator
AO = ta.sma(hl2, 5) - ta.sma(hl2, 34)
plot(AO, title='AO')
plot(AO[1], title='AO[1]')
plot(AO[2], title='AO[2]')

// study("Aroon")
Aroon_length = 14
plot(100 * (ta.highestbars(high, Aroon_length + 1) + Aroon_length) / Aroon_length, title='Aroon.Up')
plot(100 * (ta.lowestbars(low, Aroon_length + 1) + Aroon_length) / Aroon_length, title='Aroon.Down')

// value traded (dollar volume)
plot(volume * close * syminfo.pointvalue, title='Value.Traded')

// study("My Keltner Channels", overlay=true)
lengthKltChnl = 20
multKltChnl = 2
maKltChnl = ta.ema(close, lengthKltChnl)
atrlength = input(10, "ATR Length")
rangemaKltChnl = ta.atr(atrlength)
plot(maKltChnl + rangemaKltChnl * multKltChnl, title='KltChnl.upper')
plot(maKltChnl - rangemaKltChnl * multKltChnl, title='KltChnl.lower')
plot(maKltChnl, title='KltChnl.basis')

// study("My Parabolic SAR", overlay=true)
PSAR = ta.sar(0.02, 0.02, 0.2)
plot(PSAR, title='P.SAR')

// study("My Money Flow")
lenMF = 14
posMF = math.sum(hlc3 > hlc3[1] ? hlc3 * volume : 0, lenMF)
negMF = math.sum(hlc3 < hlc3[1] ? hlc3 * volume : 0, lenMF)
plot(100.0 - 100.0 / (1.0 + posMF / negMF), title='MoneyFlow')

// study("My Chaikin Money Flow")
lenCMF = 20
accdistRaw = not(close == low and close == high or high == low) ? (close - low - (high - close)) / (high - low) * volume : 0
plot(math.sum(accdistRaw, lenCMF) / math.sum(volume, lenCMF), title='ChaikinMoneyFlow')

// Stochastic RSI
StochRSI() =>
	rsi1 = ta.rsi(close, 14)
	K = ta.sma(ta.stoch(rsi1, rsi1, rsi1, 14), 3)
	D = ta.sma(K, 3)
	[K, D]
[Stoch_RSI_K, Stoch_RSI_D] = StochRSI()
plot(Stoch_RSI_K, title='Stoch.RSI.K')
plot(Stoch_RSI_D, title='Stoch.RSI.D')

// Williams Percent Range
WR_period = 14
WR = (ta.highest(high, WR_period) - close) / (ta.highest(high, WR_period) - ta.lowest(low, WR_period)) * -100
plot(WR, title='W.R')

// Rate Of Change (ROC)
plot(ta.roc(close, 9), title='ROC')

// Bull / Bear Power
BullPower = high - ta.ema(close, 13)
BearPower = low - ta.ema(close, 13)
plot(BullPower + BearPower, title='BBPower')

// Ultimate Oscillator
tl() =>
	close[1] < low ? close[1] : low
uo(ShortLen, MiddlLen, LongLen) =>
	Value1 = math.sum(ta.tr, ShortLen)
	Value2 = math.sum(ta.tr, MiddlLen)
	Value3 = math.sum(ta.tr, LongLen)
	Value4 = math.sum(close - tl(), ShortLen)
	Value5 = math.sum(close - tl(), MiddlLen)
	Value6 = math.sum(close - tl(), LongLen)
	UO = float(na)
	if Value1 != 0 and Value2 != 0 and Value3 != 0
		var0 = LongLen / ShortLen
		var1 = LongLen / MiddlLen
		Value7 = Value4 / Value1 * var0
		Value8 = Value5 / Value2 * var1
		Value9 = Value6 / Value3
		UO := (Value7 + Value8 + Value9) / (var0 + var1 + 1)
	UO
UO = uo(7, 14, 28)
if not na(UO)
	UO *= 100
plot(UO, title='UO')

// Ichimoku Cloud
donchian(len) =>
	math.avg(ta.lowest(len), ta.highest(len))
ichimoku_cloud(v1, v2, v3) =>
	conversionLine = donchian(v1)
	baseLine = donchian(v2)
	leadLine1 = math.avg(conversionLine, baseLine)
	leadLine2 = donchian(v3)
	[conversionLine, baseLine, leadLine1, leadLine2]
[IC_CLine, IC_BLine, IC_Lead1, IC_Lead2] = ichimoku_cloud(9, 26, 52)
IC_displacement = 25
plot(IC_CLine, title='Ichimoku.CLine')
plot(IC_BLine, title='Ichimoku.BLine')
plot(IC_Lead1[IC_displacement], offset=IC_displacement, title='Ichimoku.Lead1')
plot(IC_Lead2[IC_displacement], offset=IC_displacement, title='Ichimoku.Lead2')
[IC_CLine_20_60_120_30, IC_BLine_20_60_120_30, IC_Lead1_20_60_120_30, IC_Lead2_20_60_120_30] = ichimoku_cloud(20, 60, 120)
IC_displacement := 30
plot(IC_CLine_20_60_120_30, title='Ichimoku.CLine_20_60_120_30')
plot(IC_BLine_20_60_120_30, title='Ichimoku.BLine_20_60_120_30')
plot(IC_Lead1_20_60_120_30[IC_displacement], offset=IC_displacement, title='Ichimoku.Lead1_20_60_120_30')
plot(IC_Lead2_20_60_120_30[IC_displacement], offset=IC_displacement, title='Ichimoku.Lead2_20_60_120_30')

// Volume Weighted Moving Average (VWMA)
VWMA = ta.vwma(close, 20)
plot(VWMA, title='VWMA')

// Average Day Range
plot(ta.sma(high, 14) - ta.sma(low, 14), title='ADR')

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
PriceAvg = ta.ema(close, 50)
DownTrend = close < PriceAvg
UpTrend = close > PriceAvg

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
calcRecommendMA(left, right) =>
	na(left) or na(right) ? na : left == right ? 0 : left < right ? 1 : -1
calcRecommend(buy, sell) =>
	buy ? 1 : sell ? -1 : 0

// calculate trading recommendation based on SMA/EMA
recMA = .0
recMAC = .0
if not na(close)
	if not na(SMA10)
		recMA += calcRecommendMA(SMA10, close)
		recMAC += 1
	if not na(SMA20)
		recMA += calcRecommendMA(SMA20, close)
		recMAC += 1
	if not na(SMA30)
		recMA += calcRecommendMA(SMA30, close)
		recMAC += 1
	if not na(SMA50)
		recMA += calcRecommendMA(SMA50, close)
		recMAC += 1
	if not na(SMA100)
		recMA += calcRecommendMA(SMA100, close)
		recMAC += 1
	if not na(SMA200)
		recMA += calcRecommendMA(SMA200, close)
		recMAC += 1
	if not na(EMA10)
		recMA += calcRecommendMA(EMA10, close)
		recMAC += 1
	if not na(EMA20)
		recMA += calcRecommendMA(EMA20, close)
		recMAC += 1
	if not na(EMA30)
		recMA += calcRecommendMA(EMA30, close)
		recMAC += 1
	if not na(EMA50)
		recMA += calcRecommendMA(EMA50, close)
		recMAC += 1
	if not na(EMA100)
		recMA += calcRecommendMA(EMA100, close)
		recMAC += 1
	if not na(EMA200)
		recMA += calcRecommendMA(EMA200, close)
		recMAC += 1
recHullMA9 = calcRecommendMA(HullMA9, close)
plot(recHullMA9, title='Rec.HullMA9')
if not na(recHullMA9)
	recMA += recHullMA9
	recMAC += 1
recVWMA = calcRecommendMA(VWMA, close)
plot(recVWMA, title='Rec.VWMA')
if not na(recVWMA)
	recMA += recVWMA
	recMAC += 1
recIC = float(na)
if not(na(IC_Lead1) or na(IC_Lead2) or na(close) or na(close[1]) or na(IC_BLine) or na(IC_CLine))
	recIC := calcRecommend(IC_Lead1 > IC_Lead2 and close > IC_Lead1 and close < IC_BLine and close[1] < IC_CLine and close > IC_CLine, IC_Lead2 > IC_Lead1 and close < IC_Lead2 and close > IC_BLine and close[1] > IC_CLine and close < IC_CLine)
plot(recIC, title='Rec.Ichimoku')
if not na(recIC)
	recMA += recIC
	recMAC += 1
recMA := recMAC > 0 ? recMA / recMAC : na
plot(recMA, title='Recommend.MA')
recOther = .0
recOtherC = .0
recRSI = RSI
if not(na(recRSI) or na(recRSI[1]))
	recOtherC += 1
	recOther += calcRecommend(recRSI < 30 and recRSI[1] < recRSI, recRSI > 70 and recRSI[1] > recRSI)
if not(na(kStoch) or na(dStoch) or na(kStoch[1]) or na(dStoch[1]))
	recOtherC += 1
	recOther += calcRecommend(kStoch < 20 and dStoch < 20 and kStoch > dStoch and kStoch[1] < dStoch[1], kStoch > 80 and dStoch > 80 and kStoch < dStoch and kStoch[1] > dStoch[1])
recCCI = CCI
if not(na(recCCI) or na(recCCI[1]))
	recOtherC += 1
	recOther += calcRecommend(recCCI < -100 and recCCI > recCCI[1], recCCI > 100 and recCCI < recCCI[1])
if not(na(adxValue) or na(adxPlus[1]) or na(adxMinus[1]) or na(adxPlus) or na(adxMinus))
	recOtherC += 1
	recOther += calcRecommend(adxValue > 20 and adxPlus[1] < adxMinus[1] and adxPlus > adxMinus, adxValue > 20 and adxPlus[1] > adxMinus[1] and adxPlus < adxMinus)
if not(na(AO) or na(AO[1]))
	recOtherC += 1
	recOther += calcRecommend(ta.crossover(AO, 0) or AO > 0 and AO[1] > 0 and AO > AO[1] and AO[2] > AO[1], ta.crossunder(AO, 0) or AO < 0 and AO[1] < 0 and AO < AO[1] and AO[2] < AO[1])
if not(na(Mom) or na(Mom[1]))
	recOtherC += 1
	recOther += calcRecommend(Mom > Mom[1], Mom < Mom[1])
if not(na(macdMACD) or na(signalMACD))
	recOtherC += 1
	recOther += calcRecommend(macdMACD > signalMACD, macdMACD < signalMACD)
recStoch_RSI = float(na)
if not(na(DownTrend) or na(UpTrend) or na(Stoch_RSI_K) or na(Stoch_RSI_D) or na(Stoch_RSI_K[1]) or na(Stoch_RSI_D[1]))
	recStoch_RSI := calcRecommend(DownTrend and Stoch_RSI_K < 20 and Stoch_RSI_D < 20 and Stoch_RSI_K > Stoch_RSI_D and Stoch_RSI_K[1] < Stoch_RSI_D[1], UpTrend and Stoch_RSI_K > 80 and Stoch_RSI_D > 80 and Stoch_RSI_K < Stoch_RSI_D and Stoch_RSI_K[1] > Stoch_RSI_D[1])
plot(recStoch_RSI, title='Rec.Stoch.RSI')
if not na(recStoch_RSI)
	recOtherC += 1
	recOther += recStoch_RSI
recWR = float(na)
if not(na(WR) or na(WR[1]))
	recWR := calcRecommend(WR < -80 and WR > WR[1], WR > -20 and WR < WR[1])
plot(recWR, title='Rec.WR')
if not na(recWR)
	recOtherC += 1
	recOther += recWR
recBBPower = float(na)
if not(na(UpTrend) or na(DownTrend) or na(BearPower) or na(BearPower[1]) or na(BullPower) or na(BullPower[1]))
	recBBPower := calcRecommend(UpTrend and BearPower < 0 and BearPower > BearPower[1], DownTrend and BullPower > 0 and BullPower < BullPower[1])
plot(recBBPower, title='Rec.BBPower')
if not na(recBBPower)
	recOtherC += 1
	recOther += recBBPower
recUO = float(na)
if not na(UO)
	recUO := calcRecommend(UO > 70, UO < 30)
plot(recUO, title='Rec.UO')
if not na(recUO)
	recOtherC += 1
	recOther += recUO
recOther := recOtherC > 0 ? recOther / recOtherC : na
plot(recOther, title='Recommend.Other')
recTotal = .0
recTotalC = .0
if not na(recMA)
	recTotal += recMA
	recTotalC += 1
if not na(recOther)
	recTotal += recOther
	recTotalC += 1
recTotal := recTotalC > 0 ? recTotal / recTotalC : na
plot(recTotal, title='Recommend.All')

//////////////////////////////////// Candle Patterns ////////////////////////////////////
C_PriceAvg = ta.sma(close, 50)
C_Len = 14
C_Factor = 2.0
C_ShadowPercent = 5
C_ShadowEqualsPercent = 100
C_BodyHi = math.max(close, open)
C_BodyLo = math.min(close, open)
C_Body = C_BodyHi - C_BodyLo
C_BodyAvg = ta.sma(C_Body, C_Len)
C_SmallBody = C_Body < C_BodyAvg
C_LongBody = C_Body > C_BodyAvg
C_UpShadow = high - C_BodyHi
C_DnShadow = C_BodyLo - low
C_DownTrend = close < C_PriceAvg
C_UpTrend = close > C_PriceAvg
C_HasUpShadow = C_UpShadow > C_ShadowPercent / 100 * C_Body
C_HasDnShadow = C_DnShadow > C_ShadowPercent / 100 * C_Body
C_WhiteBody = open < close
C_BlackBody = open > close
C_Range = high - low
C_IsInsideBar = C_BodyHi[1] > C_BodyHi and C_BodyLo[1] < C_BodyLo
C_BodyMiddle = C_Body / 2 + C_BodyLo
C_ShadowEquals = C_UpShadow == C_DnShadow or math.abs(C_UpShadow - C_DnShadow) / C_DnShadow * 100 < C_ShadowEqualsPercent and math.abs(C_DnShadow - C_UpShadow) / C_UpShadow * 100 < C_ShadowEqualsPercent

// study("Hammer, Inverted Hammer, Hanging Man, Shooting Star")
C_oHammer = false
C_oHangingMan = false
if C_SmallBody and C_Body > 0 and C_BodyLo > hl2 and C_DnShadow >= C_Factor * C_Body and not C_HasUpShadow
	if C_DownTrend
		C_oHammer := true
	else
		if C_UpTrend
			C_oHangingMan := true
plot(C_oHammer ? 1 : 0, title='Candle.Hammer')
plot(C_oHangingMan ? 1 : 0, title='Candle.HangingMan')
C_oInvertedHammer = false
C_oShootingStar = false
if C_SmallBody and C_Body > 0 and C_BodyHi < hl2 and C_UpShadow >= C_Factor * C_Body and not C_HasDnShadow
	if C_DownTrend
		C_oInvertedHammer := true
	else
		if C_UpTrend
			C_oShootingStar := true
plot(C_oInvertedHammer ? 1 : 0, title='Candle.InvertedHammer')
plot(C_oShootingStar ? 1 : 0, title='Candle.ShootingStar')

// study("Evening & Morning Stars")
C_oMorningStar = false
C_oEveningStar = false
if C_LongBody[2] and C_SmallBody[1] and C_LongBody
	if C_DownTrend and C_BlackBody[2] and C_BodyHi[1] < C_BodyLo[2] and C_WhiteBody and C_BodyHi >= C_BodyMiddle[2] and C_BodyHi < C_BodyHi[2] and C_BodyHi[1] < C_BodyLo
		C_oMorningStar := true
	else
		if C_UpTrend and C_WhiteBody[2] and C_BodyLo[1] > C_BodyHi[2] and C_BlackBody and C_BodyLo <= C_BodyMiddle[2] and C_BodyLo > C_BodyLo[2] and C_BodyLo[1] > C_BodyHi
			C_oEveningStar := true
plot(C_oMorningStar ? 1 : 0, title='Candle.MorningStar')
plot(C_oEveningStar ? 1 : 0, title='Candle.EveningStar')

// study("Marubozu")
C_MarubozuShadowPercent = 5
C_Marubozu = C_LongBody and C_UpShadow <= C_MarubozuShadowPercent / 100 * C_Body and C_DnShadow <= C_MarubozuShadowPercent / 100 * C_Body
C_WhiteMarubozu = C_Marubozu and C_WhiteBody
C_BlackMarubozu = C_Marubozu and C_BlackBody
plot(C_BlackMarubozu ? 1 : 0, title='Candle.Marubozu.Black')
plot(C_WhiteMarubozu ? 1 : 0, title='Candle.Marubozu.White')

//study("Doji")
C_DojiBodyPercent = 5
C_IsDojiBody = C_Range > 0 and C_Body <= C_Range * C_DojiBodyPercent / 100
C_Doji = C_IsDojiBody and C_ShadowEquals
C_DragonflyDoji = C_IsDojiBody and C_UpShadow <= C_Body
C_GravestoneDoji = C_IsDojiBody and C_DnShadow <= C_Body
plot(C_Doji and not C_DragonflyDoji and not C_GravestoneDoji ? 1 : 0, title='Candle.Doji')
plot(C_DragonflyDoji ? 1 : 0, title='Candle.Doji.Dragonfly')
plot(C_GravestoneDoji ? 1 : 0, title='Candle.Doji.Gravestone')

// study("Harami")
plot(C_LongBody[1] and C_BlackBody[1] and C_DownTrend[1] and C_WhiteBody and C_SmallBody and high <= C_BodyHi[1] and low >= C_BodyLo[1] ? 1 : 0, title='Candle.Harami.Bullish')
plot(C_LongBody[1] and C_WhiteBody[1] and C_UpTrend[1] and C_BlackBody and C_SmallBody and high <= C_BodyHi[1] and low >= C_BodyLo[1] ? 1 : 0, title='Candle.Harami.Bearish')

//study("Long Shadows")
C_LongShadowPercent = 75
plot(C_DnShadow > C_Range / 100 * C_LongShadowPercent ? 1 : 0, title='Candle.LongShadow.Lower')
plot(C_UpShadow > C_Range / 100 * C_LongShadowPercent ? 1 : 0, title='Candle.LongShadow.Upper')

//study("Spinning Top")
C_SpinningTopPercent = 34
C_IsSpinningTop = C_DnShadow >= C_Range / 100 * C_SpinningTopPercent and C_UpShadow >= C_Range / 100 * C_SpinningTopPercent and not C_IsDojiBody
plot(C_IsSpinningTop and C_WhiteBody ? 1 : 0, title='Candle.SpinningTop.White')
plot(C_IsSpinningTop and C_BlackBody ? 1 : 0, title='Candle.SpinningTop.Black')

// study("3 White Soldiers & 3 Black Crows")
C_3WSld3WCrwShadowPercent = 5
C_3WSld3WCrw_HaveNotUpShadow = C_Range * C_3WSld3WCrwShadowPercent / 100 > C_UpShadow
C_3WSld3WCrw_HaveNotDnShadow = C_Range * C_3WSld3WCrwShadowPercent / 100 > C_DnShadow
C_o3WhiteSoldiers = false
C_o3BlackCrows = false
if C_LongBody and C_LongBody[1] and C_LongBody[2]
	if C_WhiteBody and C_WhiteBody[1] and C_WhiteBody[2]
		C_o3WhiteSoldiers := close > close[1] and close[1] > close[2] and open < close[1] and open > open[1] and open[1] < close[2] and open[1] > open[2] and C_3WSld3WCrw_HaveNotUpShadow and C_3WSld3WCrw_HaveNotUpShadow[1] and C_3WSld3WCrw_HaveNotUpShadow[2]
	if C_BlackBody and C_BlackBody[1] and C_BlackBody[2]
		C_o3BlackCrows := close < close[1] and close[1] < close[2] and open > close[1] and open < open[1] and open[1] > close[2] and open[1] < open[2] and C_3WSld3WCrw_HaveNotDnShadow and C_3WSld3WCrw_HaveNotDnShadow[1] and C_3WSld3WCrw_HaveNotDnShadow[2]
plot(C_o3WhiteSoldiers ? 1 : 0, title='Candle.3WhiteSoldiers')
plot(C_o3BlackCrows ? 1 : 0, title='Candle.3BlackCrows')

// study("Engulfing")
plot(C_DownTrend and C_WhiteBody and C_LongBody and C_BlackBody[1] and C_SmallBody[1] and close >= open[1] and open <= close[1] and (close > open[1] or open < close[1]) ? 1 : 0, title='Candle.Engulfing.Bullish')
plot(C_UpTrend and C_BlackBody and C_LongBody and C_WhiteBody[1] and C_SmallBody[1] and close <= open[1] and open >= close[1] and (close < open[1] or open > close[1]) ? 1 : 0, title='Candle.Engulfing.Bearish')

// study("Abandoned Baby")
plot(C_DownTrend[2] and C_BlackBody[2] and C_IsDojiBody[1] and low[2] > high[1] and C_WhiteBody and high[1] < low ? 1 : 0, title='Candle.AbandonedBaby.Bullish')
plot(C_UpTrend[2] and C_WhiteBody[2] and C_IsDojiBody[1] and high[2] < low[1] and C_BlackBody and low[1] > high ? 1 : 0, title='Candle.AbandonedBaby.Bearish')

// study("Tri-Star")
C_3Dojis = C_Doji[2] and C_Doji[1] and C_Doji
C_BodyGapUp = C_BodyHi[1] < C_BodyLo
C_BodyGapDn = C_BodyLo[1] > C_BodyHi
plot(C_3Dojis and C_DownTrend[2] and C_BodyGapDn[1] and C_BodyGapUp ? 1 : 0, title='Candle.TriStar.Bullish')
plot(C_3Dojis and C_UpTrend[2] and C_BodyGapUp[1] and C_BodyGapDn ? 1 : 0, title='Candle.TriStar.Bearish')

// study("Kicking")
plot(C_BlackMarubozu[1] and C_WhiteMarubozu and high[1] < low ? 1 : 0, title='Candle.Kicking.Bullish')
plot(C_WhiteMarubozu[1] and C_BlackMarubozu and low[1] > high ? 1 : 0, title='Candle.Kicking.Bearish')

// study(title="VWAP", shorttitle="VWAP", overlay=true)
plot(ta.vwap(hlc3), title='VWAP')