// high & low
var ath = high
var ath_date = time/1000
var low_after_ath = low
if high > ath
	ath := high
	ath_date := time/1000
	low_after_ath := low
if low < low_after_ath
	low_after_ath := low

plot(ath, title='High_All')
plot(ath_date, title='High_All_Date')
plot(ath, title='High_All_Calc')
plot(ath_date, title='High_All_Calc_Date')
plot(low_after_ath, title='Low_After_High_All')

var atl = low
var atl_date = time/1000
if low < atl
	atl := low
	atl_date := time/1000
plot(atl, title='Low_All')
plot(atl_date, title='Low_All_Date')
plot(atl, title='Low_All_Calc')
plot(atl_date, title='Low_All_Calc_Date')
var firstOpen = open
plot(firstOpen, title='Open_All_Calc')
custom_lowest_and_date(len, maxbarsback) =>
	// max_bars_back(low, maxbarsback)
	// max_bars_back(time, maxbarsback)
	fake = low[maxbarsback + 1] * time[maxbarsback + 1]
	if len == 0
		[na + fake, na]
	else if len == 1
		[low, time / 1000]
	else
		_len = len
		if not na(low[len + 1])
			_len -= 1
			_len
		index = 0
		for i = 0 to _len by 1
			if low[i] < low[index]
				index := i
		[low[index], time[index] / 1000]
custom_highest_and_date(len, maxbarsback) =>
	// max_bars_back(high, maxbarsback)
	// max_bars_back(time, maxbarsback)
	fake = high[maxbarsback + 1] * time[maxbarsback + 1]
	if len == 0
		[na + fake, na]
	else if len == 1
		[high, time / 1000]
	else
		_len = len
		if not na(high[len + 1])
			_len -= 1
		index = 0
		for i = 0 to _len by 1
			if high[i] > high[index]
				index := i
		[high[index], time[index] / 1000]
fastSearchTimeIndex(x, maxbarsback) =>
	// max_bars_back(time, maxbarsback)
	mid = 0 * time[maxbarsback]
	right = math.min(bar_index, maxbarsback)
	left = 0
	if time < x
		0
	else
		for i = 0 to 9 by 1
			mid := math.ceil((left + right) / 2)
			if left == right
				break
			else if time[mid] < x
				right := mid
				continue
			else if time[mid] > x
				left := mid
				continue
			else
				break
		mid
years10 = (365 * 4 + 366) * 2
years10_ago = timenow - 1000 * 60 * 60 * 24 * years10
countOfBars10YearAgo = fastSearchTimeIndex(years10_ago, years10)
years5 = 365 * 4 + 366
years5_ago = timenow - 1000 * 60 * 60 * 24 * years5
countOfBars5YearAgo = fastSearchTimeIndex(years5_ago, years5)
years3 = 365 * 3
years3_ago = timenow - 1000 * 60 * 60 * 24 * years3
countOfBars3YearAgo = fastSearchTimeIndex(years3_ago, years3)
weeks52 = 7 * 52
weeks52_ago = timenow - 1000 * 60 * 60 * 24 * weeks52
countOfBars52WeekAgo = fastSearchTimeIndex(weeks52_ago, weeks52)
[weeks52_low, weeks52_low_date] = custom_lowest_and_date(countOfBars52WeekAgo, weeks52)
plot(weeks52_low, title='price_52_week_low')
plot(weeks52_low_date, title='price_52_week_low_date')
[weeks52_high, weeks52_high_date] = custom_highest_and_date(countOfBars52WeekAgo, weeks52)
plot(weeks52_high, title='price_52_week_high')
plot(weeks52_high_date, title='price_52_week_high_date')
month6 = 180
months6_ago = timenow - 1000 * 60 * 60 * 24 * month6
countOfBars6MonthAgo = fastSearchTimeIndex(months6_ago, month6)
[months6_low, months6_low_date] = custom_lowest_and_date(countOfBars6MonthAgo, month6)
plot(months6_low, title='Low_6M')
plot(months6_low_date, title='Low_6M_Date')
[months6_high, months6_high_date] = custom_highest_and_date(countOfBars6MonthAgo, month6)
plot(months6_high, title='High_6M')
plot(months6_high_date, title='High_6M_Date')
month3 = 90
months3_ago = timenow - 1000 * 60 * 60 * 24 * month3
countOfBars3MonthAgo = fastSearchTimeIndex(months3_ago, month3)
[months3_low, months3_low_date] = custom_lowest_and_date(countOfBars3MonthAgo, month3)
plot(months3_low, title='Low_3M')
plot(months3_low_date, title='Low_3M_Date')
[months3_high, months3_high_date] = custom_highest_and_date(countOfBars3MonthAgo, month3)
plot(months3_high, title='High_3M')
plot(months3_high_date, title='High_3M_Date')
month1 = 30
month_ago_this_bar = time - 1000 * 60 * 60 * 24 * month1
month_ago = timenow - 1000 * 60 * 60 * 24 * month1
countOfBars1MonthAgo = fastSearchTimeIndex(month_ago, month1)
countOfBars1MonthAgoThisBar = fastSearchTimeIndex(month_ago_this_bar, month1)
[month1_low, month1_low_date] = custom_lowest_and_date(countOfBars1MonthAgo, month1)
plot(month1_low, title='Low_1M')
plot(month1_low_date, title='Low_1M_Date')
[month1_high, month1_high_date] = custom_highest_and_date(countOfBars1MonthAgo, month1)
plot(month1_high, title='High_1M')
plot(month1_high_date, title='High_1M_Date')
week1 = 7
week_ago = timenow - 1000 * 60 * 60 * 24 * week1
week_ago_this_bar = time - 1000 * 60 * 60 * 24 * week1
countOfBarsWeekAgo = fastSearchTimeIndex(week_ago, week1)
countOfBarsWeekAgoThisBar = fastSearchTimeIndex(week_ago_this_bar, week1)
[week1_low] = custom_lowest_and_date(countOfBarsWeekAgo, week1)
plot(week1_low, title='Low_5D')
[week1_high] = custom_highest_and_date(countOfBarsWeekAgo, week1)
plot(week1_high, title='High_5D')
// volatility
volatility(bb) =>
	bb2 = bb
	if bar_index == 0
		bb2 := 365
	if bb2 == 0
		na
	else
		s = math.sum((high - low) / math.abs(low) * 100 / bb2, bb2)
		if bb == 0
			na
		else
			s
plot(volatility(countOfBarsWeekAgoThisBar), title='Volatility_W')
plot(volatility(countOfBars1MonthAgoThisBar), title='Volatility_M')
plot(ta.tr(true) * 100 / math.abs(low), title='Volatility_D')

// first bar's timestamp in pine history
var first_bar_time = time / 1000
plot(first_bar_time, title='first_bar_time')